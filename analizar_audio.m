function [] = analizar_audio(nombre_archivo)##---------------------------------------------------------------------------##  CARGA DE SEÑALES CON COMANDOS DISPONIBLES EN EL SISTEMA ##  (para comparar luego con la señal de entrada)##---------------------------------------------------------------------------##  [y_adelante, fm_adelante] = audioread("dataset-ajustes/adelante.wav");##  [y_atras, fm_atras] = audioread("dataset-ajustes/atras.wav");##  [y_derecha, fm_derecha] = audioread("dataset-ajustes/derecha.wav");##  [y_izquierda, fm_izquierda] = audioread("dataset-ajustes/izquierda.wav");##  [y_parar, fm_parar] = audioread("dataset-ajustes/parar.wav");  ##---------------------------------------------------------------------------##  LECTURA DE LA SEÑAL DE VOZ DE ENTRADA##---------------------------------------------------------------------------  % y: es la señal recibida, fm: es la frecuencia de muestreo  % [y, fm] = audioread(nombre_archivo);  [y, fm] = audioread("dataset-ajustes/atras_1.wav");##  yo = y; % y original para graficar si nos sirve##  fm    % Si la señal recibida se encuentra como vector columna, se tranforma a vector fila  if(length(y(1,:)) < length(y(:,1)))    y = y';     endif    sound(y)  % para escuchar el audio  ##  [S,f] = TDF(y,1/fm);##  figure(2)##  plot(S)  ##---------------------------------------------------------------------------##  FILTRADO##---------------------------------------------------------------------------  ## Ver si debemos usar algun tipo de filtro de los que se ven en la unidad 7,  ## o si simplemente hacemos un pasa-banda que filtre las frecuencias por debajo   ## y arriba de las frecuencias aproximadas de la voz humana  ##---------------------------------------------------------------------------##  EXTRACCION DE CARACTERISTICAS (Coeficientes cepstrales en escala de Mel)##---------------------------------------------------------------------------    ## Al final de la pag. 13 del word de anotaciones de teoria se habla de estos MFCC,   ## y se explica los pasos para calcularlos (pre-enfasis, ventaneo, Fourier, banco de filtros,  ## logaritmo, transformada coseno, liftrado) y se muestra una imagen.   ## Se calculan en cada ventana.    ## Ver si debemos usar esos mismos pasos.    ##  cr = real(ifft(log(abs(fft(y))))); % cepstrum  ##---------------------------------------------------------------------------##  CORRELACION CRUZADA##---------------------------------------------------------------------------  ##r = xcorr(x,y) devuelve la correlación cruzada de dos secuencias de tiempo diferenciado.   ##La correlación cruzada mide la similitud entre un vector "x" y las copias desplazadas (desfasadas)   ##de un vector "y" como función del desfase. Si "x" e "y" tienen longitudes diferentes,   ##la función añade ceros al final del vector más corto para que tenga la misma longitud que el otro.  ## Se deberia hacer la correlacion cruzada entre la señal de entrada y las cinco   ## señales de comandos disponibles en el sistema.   ## Tambien debemos usar la técnica dynamic time warping (DWT) para hacer un ajuste entre las señales   ## que nos permita realizar la comparación, porque pueden ser de distinta duracion y entonces no usan  ## la misma cantidad de ventanas.   ##---------------------------------------------------------------------------##  IDENTIFICACION DE COMANDO##---------------------------------------------------------------------------  ## La señal con mayor correlacion sera la de mayor similitud con la señal de entrada,   ## determinando asi cual es el comando que el usuario desea ejecutar ##---------------------------------------------------------------------------##  RESULTADO##---------------------------------------------------------------------------  ## Mostrar si la señal de entrada fue un comando valido o no endfunction  