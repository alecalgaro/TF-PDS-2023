function [] = analizar_audio(nombre_archivo)pkg load signal;##---------------------------------------------------------------------------##  CARGA DE SE�ALES CON COMANDOS DISPONIBLES EN EL SISTEMA##  (para comparar luego con la se�al de entrada)##---------------------------------------------------------------------------##  [y_adelante, fm_adelante] = audioread("dataset-ajustes/adelante.wav");##  [y_atras, fm_atras] = audioread("dataset-ajustes/atras.wav");##  [y_derecha, fm_derecha] = audioread("dataset-ajustes/derecha.wav");##  [y_izquierda, fm_izquierda] = audioread("dataset-ajustes/izquierda.wav");##  [y_parar, fm_parar] = audioread("dataset-ajustes/parar.wav");##---------------------------------------------------------------------------##  LECTURA DE LA SE�AL DE VOZ DE ENTRADA##---------------------------------------------------------------------------  % y: es la se�al recibida, fm: es la frecuencia de muestreo  % [y, fm] = audioread(nombre_archivo);  [y, fm] = audioread("dataset-ajustes/atras_1.wav");##  yo = y; % y original para graficar si nos sirve##  fm  % Si la se�al recibida se encuentra como vector columna, se tranforma a vector fila  if(length(y(1,:)) < length(y(:,1)))    y = y';  endif  sound(y)  % para escuchar el audio  # Le asigno el unico canal por las dudas  y = y(1, :); # Pasar a dimension (1, 5197)  figure  plot(y)# Me llamo atencion porque la dimension de y es (5197, 2)##  sound(sum(y, 2))  % para escuchar el audio##  sound(y(1, :))  % para escuchar el audio##  plot(y(1, :));##  hold on##  plot(y(2, :));##  [S,f] = TDF(y,1/fm);##  figure(2)##  plot(S)##---------------------------------------------------------------------------##  FILTRADO##---------------------------------------------------------------------------  ## Ver si debemos usar algun tipo de filtro de los que se ven en la unidad 7,  ## o si simplemente hacemos un pasa-banda que filtre las frecuencias por debajo  ## y arriba de las frecuencias aproximadas de la voz humana  # Propongo filtro de pasa-banda, dejando pasar [300 - 3000Hz]  b = filtro_pasa_banda(fm, 0, 4000, hamming(fm + 1));  # ======================[Analicis mediante grafica]=====================  # Se puede borrar despues, nada mas es para ver las cosas  # Filtro pasa-banda [300 - 3000Hz]  [h, w] = freqz(b, 1, 1000, fm);  figure  subplot(2, 1, 1)  plot(w, abs(h));  # Sonido filtrado  y_filtrado = filter(b, 1, y);  subplot(2, 1, 2)  plot(y_filtrado);  sound(y_filtrado);  # TDF de la senal original  figure  subplot(2, 1, 1)  [s, f] = TDF(y, 1/fm);  plot(f, s);  # TDF de senal filtrado  subplot(2, 1, 2)  [s, f] = TDF(y_filtrado, 1/fm);  plot(f, s);  sound(y_filtrado)##---------------------------------------------------------------------------##  EXTRACCION DE CARACTERISTICAS (Coeficientes cepstrales en escala de Mel)##---------------------------------------------------------------------------  ## Al final de la pag. 13 del word de anotaciones de teoria se habla de estos MFCC,  ## y se explica los pasos para calcularlos (pre-enfasis, ventaneo, Fourier, banco de filtros,  ## logaritmo, transformada coseno, liftrado) y se muestra una imagen.  ## Se calculan en cada ventana.  ## Ver si debemos usar esos mismos pasos.  ##  cr = real(ifft(log(abs(fft(y))))); % cepstrum##---------------------------------------------------------------------------##  CORRELACION CRUZADA##---------------------------------------------------------------------------  ##r = xcorr(x,y) devuelve la correlaci�n cruzada de dos secuencias de tiempo diferenciado.  ##La correlaci�n cruzada mide la similitud entre un vector "x" y las copias desplazadas (desfasadas)  ##de un vector "y" como funci�n del desfase. Si "x" e "y" tienen longitudes diferentes,  ##la funci�n a�ade ceros al final del vector m�s corto para que tenga la misma longitud que el otro.  ## Se deberia hacer la correlacion cruzada entre la se�al de entrada y las cinco  ## se�ales de comandos disponibles en el sistema.  ## Tambien debemos usar la t�cnica dynamic time warping (DWT) para hacer un ajuste entre las se�ales  ## que nos permita realizar la comparaci�n, porque pueden ser de distinta duracion y entonces no usan  ## la misma cantidad de ventanas.##---------------------------------------------------------------------------##  IDENTIFICACION DE COMANDO##---------------------------------------------------------------------------  ## La se�al con mayor correlacion sera la de mayor similitud con la se�al de entrada,  ## determinando asi cual es el comando que el usuario desea ejecutar##---------------------------------------------------------------------------##  RESULTADO##---------------------------------------------------------------------------  ## Mostrar si la se�al de entrada fue un comando valido o noendfunction